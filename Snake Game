import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;

public class SnakeGame extends JPanel implements ActionListener, KeyListener {
  private static final long serialVersionUID = 1L;

  public static final int SCALE = 32;
  public static final int WIDTH = 20;
  public static final int HEIGHT = 20;
  public static final int SPEED = 5;

  ArrayList<Point> snake;
  ArrayList<Point> apples;

  Timer timer;

  Point head, apple;

  int ticks, direction, score, tail;
  boolean gameOver, paused;

  public SnakeGame() {
    setFocusable(true);

    snake = new ArrayList<Point>();
    apples = new ArrayList<Point>();

    addKeyListener(this);
    setPreferredSize(new Dimension(WIDTH * SCALE, HEIGHT * SCALE));

    timer = new Timer(1000 / SPEED, this);
    timer.start();
  }

  public void paint(Graphics g) {
    g.clearRect(0, 0, WIDTH * SCALE, HEIGHT * SCALE);
    g.setColor(Color.BLACK);
    g.fillRect(0, 0, WIDTH * SCALE, HEIGHT * SCALE);
    for (Point point : snake) {
      g.setColor(Color.GREEN);
      g.fillRect(point.x * SCALE + 1, point.y * SCALE + 1, SCALE - 1, SCALE - 1);
    }
    for (Point apple : apples) {
      g.setColor(Color.RED);
      g.fillRect(apple.x * SCALE + 1, apple.y * SCALE + 1, SCALE - 1, SCALE - 1);
    }
    g.setColor(Color.WHITE);
    g.drawString("Score: " + score, 10, 10);
  }

  public static void main(String[] args) {
    JFrame frame = new JFrame("Snake Game");
    SnakeGame game = new SnakeGame();
    frame.add(game);
    frame.pack();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLocationRelativeTo(null);
    frame.setResizable(false);
    frame.setVisible(true);
  }

  public void actionPerformed(ActionEvent e) {
    if (gameOver) {
      timer.stop();
    }
    if (!paused) {
